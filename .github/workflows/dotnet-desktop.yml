name: .NET Core Desktop

on:
  # push:
  #   branches: [ "master" ]
  # pull_request:
  #   branches: [ "master" ]
  workflow_dispatch
    

jobs:
  build:
    continue-on-error: true
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        arch: [x86, x64, arm, arm64]
        

    runs-on: ${{matrix.os}}  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      rid_os: ${{ contains(matrix.os, "windows") && 'win' || contains(matrix.os, "ubuntu") && 'linux' }}
      rid: ${{ rid_os }}-${{ matrix.arch }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    # - name: Setup MSBuild.exe
    #   uses: microsoft/setup-msbuild@v2

    # Execute all unit tests in the solution
    - name: Execute unit tests
      run: dotnet test

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: dotnet restore

    # Build
    - name: Publish
      run: dotnet publish -r ${{ env.rid }} --self-contained true -p:PublishTrimmed=true -p:PublishAot=true

    # Upload the MSIX package: https://github.com/marketplace/actions/upload-a-build-artifact
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Output
        path: ./FFBatchConverter/bin/Release/net8.0/${{ env.rid }}/publish

        
